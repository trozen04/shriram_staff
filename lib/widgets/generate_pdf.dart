import 'dart:io';
import 'package:pdf/pdf.dart';
import 'package:pdf/widgets.dart' as pw;
import 'package:permission_handler/permission_handler.dart';
import 'package:open_filex/open_filex.dart';

Future<void> generateBillingPdfToDevice(List<Map<String, String>> billingDetails) async {
  // ✅ Request storage permission (Android 11+)
  if (!await Permission.manageExternalStorage.isGranted) {
    final status = await Permission.manageExternalStorage.request();
    if (!status.isGranted) {
      print('Storage permission not granted');
      await openAppSettings();
      return;
    }
  }

  final pdf = pw.Document();

  // ✅ Convert ₹ to Rs. to avoid missing glyph issue
  List<Map<String, String>> cleanedDetails = billingDetails.map((row) {
    return row.map((key, value) => MapEntry(key, value.replaceAll('₹', 'Rs.')));
  }).toList();

  // ✅ Generate full-page PDF content
  pdf.addPage(
    pw.Page(
      margin: const pw.EdgeInsets.all(20),
      pageFormat: PdfPageFormat.a4,
      build: (context) {
        return pw.Column(
          crossAxisAlignment: pw.CrossAxisAlignment.start,
          children: [
            pw.Center(
              child: pw.Text('Billing Summary',
                  style: pw.TextStyle(fontSize: 20, fontWeight: pw.FontWeight.bold)),
            ),
            pw.SizedBox(height: 20),

            // Basic info section
            pw.Text('Unit ID: #221212'),
            pw.Text('Name: Ramesh Yadav'),
            pw.Text('Broker: Rahul'),
            pw.Text('Initial Weight: 511 Qntl'),
            pw.Text('Final Weight: 511 Qntl'),
            pw.Text('Net Weight: 112 Qntl'),

            pw.SizedBox(height: 20),
            pw.Text('Billing Details',
                style: pw.TextStyle(fontSize: 16, fontWeight: pw.FontWeight.bold)),
            pw.SizedBox(height: 10),

            // Billing table
            pw.Table.fromTextArray(
              border: pw.TableBorder.all(width: 0.5),
              headerDecoration: const pw.BoxDecoration(color: PdfColors.grey300),
              headers: ['Paddy Type', 'Weight', 'Bags', 'Price', 'Amount'],
              data: cleanedDetails.map((item) {
                return [
                  item['paddyType']!,
                  item['weight']!,
                  item['bags']!,
                  item['price']!,
                  item['amount']!,
                ];
              }).toList(),
              headerStyle: pw.TextStyle(fontWeight: pw.FontWeight.bold),
              cellStyle: const pw.TextStyle(fontSize: 12),
              cellAlignment: pw.Alignment.centerLeft,
              headerAlignment: pw.Alignment.centerLeft,
            ),

            pw.SizedBox(height: 20),
            pw.Text('Deductions',
                style: pw.TextStyle(fontSize: 16, fontWeight: pw.FontWeight.bold)),
            pw.Text('Labor Charge: Rs. 2300'),
            pw.Text('Brokerage: Rs. 1220'),

            pw.Divider(),
            pw.Row(
              mainAxisAlignment: pw.MainAxisAlignment.spaceBetween,
              children: [
                pw.Text('Total:',
                    style: pw.TextStyle(
                        fontWeight: pw.FontWeight.bold, fontSize: 14)),
                pw.Text('Rs. 2300',
                    style: pw.TextStyle(
                        fontWeight: pw.FontWeight.bold, fontSize: 14)),
              ],
            ),

            pw.Spacer(),
            pw.Align(
              alignment: pw.Alignment.centerRight,
              child: pw.Text('Generated by Shree Ram Staff App',
                  style: pw.TextStyle(
                      fontSize: 10, color: PdfColors.grey600, fontStyle: pw.FontStyle.italic)),
            ),
          ],
        );
      },
    ),
  );

  // ✅ Save to Downloads folder
  final downloadsDir = Directory('/storage/emulated/0/Download');
  if (!await downloadsDir.exists()) {
    await downloadsDir.create(recursive: true);
  }

  final filePath =
      '${downloadsDir.path}/billing_${DateTime.now().millisecondsSinceEpoch}.pdf';
  final file = File(filePath);
  await file.writeAsBytes(await pdf.save());

  print('✅ PDF saved to: $filePath');
  await OpenFilex.open(file.path);
}
